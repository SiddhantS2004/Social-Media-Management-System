1.Admin Table:-
CREATE TABLE Admin (
    Admin_ID SERIAL PRIMARY KEY,
    Name VARCHAR(100),
    Date_of_Birth DATE,
    Email VARCHAR(100) UNIQUE,
    Phone_number VARCHAR(15) UNIQUE,
    Password VARCHAR(100),
    Join_date DATE DEFAULT CURRENT_DATE
);

2.Users Table:-
CREATE TABLE Users (
    User_ID SERIAL PRIMARY KEY,
    Name VARCHAR(100),
    Phone_number VARCHAR(15) UNIQUE,
    Date_of_Birth DATE,
    Email VARCHAR(100) UNIQUE,
    Password VARCHAR(100),
    Signup_date DATE DEFAULT CURRENT_DATE,
    Bio TEXT
);

3.Posts Table:-
CREATE TABLE Posts (
    Post_ID SERIAL PRIMARY KEY,
    Content TEXT,
    Caption TEXT,
    Music VARCHAR(100),
    Location VARCHAR(100),
);

4.Follow Table:-
CREATE TABLE Follow (
    Follower_ID INT,
    Followee_ID INT,
    Followed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (Follower_ID, Followee_ID),
    FOREIGN KEY (Follower_ID) REFERENCES Users(User_ID) ON DELETE CASCADE,
    FOREIGN KEY (Followee_ID) REFERENCES Users(User_ID) ON DELETE CASCADE
);

5.User_creates_post Table:-
CREATE TABLE User_creates_Post (
    User_ID INT,
    Post_ID INT,
    Created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (User_ID, Post_ID),
    FOREIGN KEY (User_ID) REFERENCES Users(User_ID) ON DELETE CASCADE,
    FOREIGN KEY (Post_ID) REFERENCES Posts(Post_ID) ON DELETE CASCADE
);

6. User_engages_with_posts Table:-
CREATE TABLE User_engages_with_posts (
    User_ID INT,
    Post_ID INT,
    PRIMARY KEY (User_ID, Post_ID),
    FOREIGN KEY (User_ID) REFERENCES Users(User_ID) ON DELETE CASCADE,
    FOREIGN KEY (Post_ID) REFERENCES Posts(Post_ID) ON DELETE CASCADE
);

      7. Likes Table:-
CREATE TABLE Likes (
    Like_ID SERIAL PRIMARY KEY
);

8. User_likes_post Table:-
CREATE TABLE User_likes_post (
    Like_ID INT PRIMARY KEY,
    Liked_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    User_ID INT,
    Post_ID INT,
    FOREIGN KEY (Like_ID) REFERENCES Likes(Like_ID) ON DELETE CASCADE,
    FOREIGN KEY (User_ID, Post_ID) REFERENCES User_engages_with_posts(User_ID, Post_ID) ON DELETE CASCADE
);

9. Shares Table:-
CREATE TABLE Shares (
    Share_ID SERIAL PRIMARY KEY
);

10. User_shares_post Table:-
CREATE TABLE User_shares_post (
    Share_ID INT PRIMARY KEY,
    Shared_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    User_ID INT,
    Post_ID INT,
    FOREIGN KEY (Share_ID) REFERENCES Shares(Share_ID) ON DELETE CASCADE,
    FOREIGN KEY (User_ID, Post_ID) REFERENCES User_engages_with_posts(User_ID, Post_ID) ON DELETE CASCADE
);

11.Comments Table:-
CREATE TABLE Comments (
    Comment_ID SERIAL PRIMARY KEY,
    Content TEXT
);

12. User_comments_on_post Table:-
CREATE TABLE User_comments_on_post (
    Comment_ID INT PRIMARY KEY,
    Commented_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    User_ID INT,
    Post_ID INT,
    FOREIGN KEY (Comment_ID) REFERENCES Comments(Comment_ID) ON DELETE CASCADE,
    FOREIGN KEY (User_ID, Post_ID) REFERENCES User_engages_with_posts(User_ID, Post_ID) ON DELETE CASCADE
);

13. User_replies_on_comments Table:-
CREATE TABLE User_replies_on_comments (
    Main_comment_ID INT,
    Reply_comment_ID INT,
    PRIMARY KEY (Reply_comment_ID),
    FOREIGN KEY (Main_comment_ID) REFERENCES Comments(Comment_ID) ON DELETE CASCADE,
    FOREIGN KEY (Reply_comment_ID) REFERENCES Comments(Comment_ID) ON DELETE CASCADE
);

14.Saves Table:-
CREATE TABLE Saves (
    Save_ID SERIAL PRIMARY KEY
);

15.User_saves_post Table:-
CREATE TABLE User_saves_post (
    Save_ID INT PRIMARY KEY,
    Saved_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    User_ID INT,
    Post_ID INT,
    FOREIGN KEY (Save_ID) REFERENCES Saves(Save_ID) ON DELETE CASCADE,
    FOREIGN KEY (User_ID, Post_ID) REFERENCES User_engages_with_posts(User_ID, Post_ID) ON DELETE CASCADE
);

16.Reports Table:-
CREATE TABLE Reports (
    Report_ID SERIAL PRIMARY KEY,
    Reason TEXT
);

17. User_reports_post Table:-
CREATE TABLE User_reports_post (
    Report_ID INT PRIMARY KEY,
    Reported_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    User_ID INT,
    Post_ID INT,
    FOREIGN KEY (Report_ID) REFERENCES Reports(Report_ID) ON DELETE CASCADE,
    FOREIGN KEY (User_ID, Post_ID) REFERENCES User_engages_with_posts(User_ID, Post_ID) ON DELETE CASCADE
);

18. Admin_controls Table
CREATE TABLE Admin_controls (
    Admin_ID INT,
    User_ID INT,
    Post_ID INT,
    PRIMARY KEY (Admin_ID, User_ID, Post_ID),
    FOREIGN KEY (Admin_ID) REFERENCES Admin(Admin_ID) ON DELETE CASCADE,
    FOREIGN KEY (User_ID) REFERENCES Users(User_ID) ON DELETE CASCADE,
    FOREIGN KEY (Post_ID) REFERENCES Posts(Post_ID) ON DELETE CASCADE
);